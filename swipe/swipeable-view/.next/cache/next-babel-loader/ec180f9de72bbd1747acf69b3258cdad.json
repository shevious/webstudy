{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/vagrant/webstudy/swipe/swipeable-view/pages/coverflow.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport Animated from 'animated/lib/targets/react-dom';\nconst styles = {\n  root: {\n    background: '#000',\n    padding: '0 50px'\n  },\n  slide: {\n    padding: '24px 16px',\n    color: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    display: 'flex'\n  },\n  img: {\n    width: 180,\n    height: 180,\n    display: 'block',\n    marginBottom: 16\n  }\n};\nconst albums = [{\n  name: 'Abbey Road',\n  src: 'https://react-swipeable-views.com/static/album-art-1.jpg'\n}, {\n  name: 'Bat Out of Hell',\n  src: 'https://react-swipeable-views.com/static/album-art-2.jpg'\n}, {\n  name: 'Homogenic',\n  src: 'https://react-swipeable-views.com/static/album-art-3.jpg'\n}, {\n  name: 'Number of the Beast',\n  src: 'https://react-swipeable-views.com/static/album-art-4.jpg'\n}, {\n  name: \"It's Blitz\",\n  src: 'https://react-swipeable-views.com/static/album-art-5.jpg'\n}, {\n  name: 'The Man-Machine',\n  src: 'https://react-swipeable-views.com/static/album-art-6.jpg'\n}, {\n  name: 'The Score',\n  src: 'https://react-swipeable-views.com/static/album-art-7.jpg'\n}, {\n  name: 'Lost Horizons',\n  src: 'https://react-swipeable-views.com/static/album-art-8.jpg'\n}];\n\nclass DemoCoverflow extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      index: 0,\n      position: new Animated.Value(0)\n    });\n\n    _defineProperty(this, \"handleChangeIndex\", index => {\n      this.setState({\n        index\n      });\n    });\n\n    _defineProperty(this, \"handleSwitch\", (index, type) => {\n      if (type === 'end') {\n        Animated.spring(this.state.position, {\n          toValue: index\n        }).start();\n        return;\n      }\n\n      this.state.position.setValue(index);\n    });\n  }\n\n  render() {\n    const {\n      index,\n      position\n    } = this.state;\n    return __jsx(SwipeableViews, {\n      index: index,\n      style: styles.root,\n      onChangeIndex: this.handleChangeIndex,\n      onSwitching: this.handleSwitch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, albums.map((album, currentIndex) => {\n      const inputRange = albums.map((_, i) => i);\n      const scale = position.interpolate({\n        inputRange,\n        outputRange: inputRange.map(i => {\n          return currentIndex === i ? 1 : 0.7;\n        })\n      });\n      const opacity = position.interpolate({\n        inputRange,\n        outputRange: inputRange.map(i => {\n          return currentIndex === i ? 1 : 0.3;\n        })\n      });\n      const translateX = position.interpolate({\n        inputRange,\n        outputRange: inputRange.map(i => {\n          return 100 / 2 * (i - currentIndex);\n        })\n      });\n      return __jsx(Animated.div, {\n        key: String(currentIndex),\n        style: _Object$assign({\n          opacity,\n          transform: [{\n            scale\n          }, {\n            translateX\n          }]\n        }, styles.slide),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        style: styles.img,\n        src: album.src,\n        alt: \"cover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), album.name);\n    }));\n  }\n\n}\n\nexport default DemoCoverflow;","map":{"version":3,"sources":["/home/vagrant/webstudy/swipe/swipeable-view/pages/coverflow.js"],"names":["React","SwipeableViews","Animated","styles","root","background","padding","slide","color","alignItems","justifyContent","flexDirection","display","img","width","height","marginBottom","albums","name","src","DemoCoverflow","Component","index","position","Value","setState","type","spring","state","toValue","start","setValue","render","handleChangeIndex","handleSwitch","map","album","currentIndex","inputRange","_","i","scale","interpolate","outputRange","opacity","translateX","String","transform"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport Animated from 'animated/lib/targets/react-dom';\n\nconst styles = {\n  root: {\n    background: '#000',\n    padding: '0 50px',\n  },\n  slide: {\n    padding: '24px 16px',\n    color: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    display: 'flex',\n  },\n  img: {\n    width: 180,\n    height: 180,\n    display: 'block',\n    marginBottom: 16,\n  },\n};\n\nconst albums = [\n  {\n    name: 'Abbey Road',\n    src: 'https://react-swipeable-views.com/static/album-art-1.jpg',\n  },\n  {\n    name: 'Bat Out of Hell',\n    src: 'https://react-swipeable-views.com/static/album-art-2.jpg',\n  },\n  {\n    name: 'Homogenic',\n    src: 'https://react-swipeable-views.com/static/album-art-3.jpg',\n  },\n  {\n    name: 'Number of the Beast',\n    src: 'https://react-swipeable-views.com/static/album-art-4.jpg',\n  },\n  {\n    name: \"It's Blitz\",\n    src: 'https://react-swipeable-views.com/static/album-art-5.jpg',\n  },\n  {\n    name: 'The Man-Machine',\n    src: 'https://react-swipeable-views.com/static/album-art-6.jpg',\n  },\n  {\n    name: 'The Score',\n    src: 'https://react-swipeable-views.com/static/album-art-7.jpg',\n  },\n  {\n    name: 'Lost Horizons',\n    src: 'https://react-swipeable-views.com/static/album-art-8.jpg',\n  },\n];\n\nclass DemoCoverflow extends React.Component {\n  state = {\n    index: 0,\n    position: new Animated.Value(0),\n  };\n\n  handleChangeIndex = index => {\n    this.setState({ index });\n  };\n\n  handleSwitch = (index, type) => {\n    if (type === 'end') {\n      Animated.spring(this.state.position, { toValue: index }).start();\n      return;\n    }\n    this.state.position.setValue(index);\n  };\n\n  render() {\n    const { index, position } = this.state;\n\n    return (\n      <SwipeableViews\n        index={index}\n        style={styles.root}\n        onChangeIndex={this.handleChangeIndex}\n        onSwitching={this.handleSwitch}\n      >\n        {albums.map((album, currentIndex) => {\n          const inputRange = albums.map((_, i) => i);\n          const scale = position.interpolate({\n            inputRange,\n            outputRange: inputRange.map(i => {\n              return currentIndex === i ? 1 : 0.7;\n            }),\n          });\n          const opacity = position.interpolate({\n            inputRange,\n            outputRange: inputRange.map(i => {\n              return currentIndex === i ? 1 : 0.3;\n            }),\n          });\n          const translateX = position.interpolate({\n            inputRange,\n            outputRange: inputRange.map(i => {\n              return (100 / 2) * (i - currentIndex);\n            }),\n          });\n\n          return (\n            <Animated.div\n              key={String(currentIndex)}\n              style={Object.assign(\n                {\n                  opacity,\n                  transform: [{ scale }, { translateX }],\n                },\n                styles.slide,\n              )}\n            >\n              <img style={styles.img} src={album.src} alt=\"cover\" />\n              {album.name}\n            </Animated.div>\n          );\n        })}\n      </SwipeableViews>\n    );\n  }\n}\n\nexport default DemoCoverflow;\n"]},"metadata":{},"sourceType":"module"}